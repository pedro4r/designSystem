import React__default, { ReactNode } from 'react';

type PropsOf<T extends keyof JSX.IntrinsicElements | React__default.JSXElementConstructor<any>> = JSX.LibraryManagedAttributes<T, React__default.ComponentPropsWithRef<T>>;

interface ButtonProps<T extends React__default.ElementType = React__default.ElementType> {
    as?: T;
    children: string;
    size?: 'small' | 'medium';
    variant?: 'primary' | 'secondary' | 'tertiary';
    icon?: ReactNode;
    iconOnly?: boolean;
    onClick?: () => void;
    disabled?: boolean;
    active?: boolean;
}
declare const Button: {
    <E extends React__default.ElementType = 'button'>(props: ButtonProps<E> & Omit<PropsOf<E>, keyof ButtonProps>): JSX.Element;
    displayName?: string;
};

export { Button };
